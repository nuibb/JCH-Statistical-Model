MPXInMb = MPXInKB/1024
MPXInMb
TotalDataTransmisionWithBothVCCandMPX = VCCMonthlyTransactionDataInFiveSecDiff + MPXMonthlyTransactionDataInFifteenMinDiff
TotalDataTransmisionWithBothVCCandMPX
InKB = TotalDataTransmisionWithBothVCCandMPX/1024
InMB = InKB/1024
InMB
InGB = InMB/1024
InGB
# Findings
# Considering VCC in every 5 sec and MPX in every 15 mins, the cost will be 2$ for 56.07818 GB data transaction in a month
# Changing VCC time to see data volume frequency
VCCTime <- c(5, 10, 15, 30, 60)
MPXTime <- c(15, 15, 15, 15, 15)
VCCDataSize <- c(vcctds)
MPXDataSize <- c(mpxtds)
MonthlyCost <- 2
dataFrame = data.frame(VCCTime, MPXTime, VCCDataSize, MPXDataSize, MonthlyCost)
dataFrame
View(dataFrame)
library(dplyr)
calculator  = mutate(dataFrame, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024, MPXMonthlyDataSize = (dataFrame$MPXDataSize * (30*24*(60/dataFrame$MPXTime)))/1024/1024, monthlyTotalVolume = VCCMonthlyDataSize + MPXMonthlyDataSize)
calculator
barplot(
names = calculator$VCCTime,
height = calculator$totalMonthlyHit,
col = "skyblue",
main = "Time Difference vs hit count in max data volume",
xlab = "Time difference",
ylab = "Hit count")
Percentage <- c(5,10,20,30,40,50,60,70,80,90)
dataFrame2 = data.frame(VCCDataSize, Percentage, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage)/100, MPXDataSize, MonthlyCost)
dataFrame2
calculator2  = mutate(dataFrame2, totalMonthlyHit = (30*24*60*(60/5)), VCCMonthlyDataSize = (dataFrame2$DataVolAfterSave *totalMonthlyHit)/1024/1024)
calculator2
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Data save in fixed VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
#Importing the dataset
dataset = read_excel('VCCDataWN.xlsx',1)
dataset
#Total data points in VCC
NROW(dataset)
# Total data size in bytes in VCC
totalSize = sum(dataset$Size)
totalSize
# Total data points and data size from grateway in VCC
gatewayData = dataset[with(dataset, dataset$Key1 =="GW"), ]
gatewayData
gdp = NROW(gatewayData)
gdp
gatewayDataSize = gdp*4 + sum(gatewayData$Size)
gatewayDataSize
# Total data points and data size from IDU in VCC
IDUData = dataset[with(dataset, dataset$Key1 =="IDU"), ]
IDUData
idp = NROW(IDUData)
idp
IDUDataSize = (4+1)*160*idp + sum(IDUData$Size)*160
IDUDataSize
# Total data points and data size from ODU in VCC
ODUData = dataset[with(dataset, dataset$Key1 =="ODU"), ]
ODUData
odp = NROW(ODUData)
odp
odp
ODUDataSize =  (4+64)*odp + sum(ODUData$Size)*64
ODUDataSize
# Total data points including 'Time'
vcctdp = gdp + idp + odp + 1
vcctdp
# Total data size including 'Time' per hit in VCC
vcctds = gateDataSize + IDUDataSize + ODUDataSize + 19 + 4
vcctds
# Total data size including 'Time' per hit in VCC
vcctds = gatewayDataSize + IDUDataSize + ODUDataSize + 19 + 4
vcctds
#In kilo byte
storageSizeInVCC = vcctds/1024
storageSizeInVCC
#In kilo byte
storageSizeInVCC = vcctds/1024
storageSizeInVCC
# Monthly total hit in VCC
VCCMonthlyHitInFiveSecDiff = 30*24*60*12
VCCMonthlyHitInFiveSecDiff
# Monthly total data size uploaded to the cloud by VCC
VCCMonthlyTransactionDataInFiveSecDiff = vcctds * VCCMonthlyHitInFiveSecDiff
VCCMonthlyTransactionDataInFiveSecDiff
VCCInKB = VCCMonthlyTransactionDataInFiveSecDiff/1024
VCCInKB
VCCInMb = VCCInKB/1024
VCCInMb
VCCInGB = VCCInMb/1024
VCCInGB
### For MPX Data
library("readxl")
#Importing the dataset
MPXData = read_excel('MPXWN.xlsx',1)
MPXData
View(MPXData)
class(MPXData)
str(MPXData)
#Total data points in MPX
NROW(MPXData)
# Total data size in bytes in MPX
totalMPXSize = sum(MPXData$`Size(byte)`)
totalMPXSize
# Total data points and data size from IDU in MPX
MPXIDUData = MPXData[with(MPXData, MPXData$Key =="IDU"), ]
MPXIDUData
midp = NROW(MPXIDUData)
midp
s = sum(MPXIDUData$`Size(byte)`)*160
mIDUDataSize = (4+1)*160*midp + sum(MPXIDUData$`Size(byte)`)*160
mIDUDataSize
# Total data points and data size from ODU in MPX
mODUData = MPXData[with(MPXData, MPXData$Key =="ODU"), ]
mODUData
modp = NROW(mODUData)
modp
mODUDataSize = (4+64)*modp + + sum(mODUData$`Size(byte)`)*64
mODUDataSize
# Total data points including 'Time'
mpxtdp = midp + modp + 1
mpxtdp
# Total data size including 'Time' per hit in MPX
mpxtds = mIDUDataSize + mODUDataSize + 19 + 4
mpxtds
#In kilo byte
mpxtds/1024
# Monthly total hit in MPX
MPXMonthlyHitInFifteenMinDiff = 30*24*4
MPXMonthlyHitInFifteenMinDiff
# Monthly total data size uploaded to the cloud by MPX
MPXMonthlyTransactionDataInFifteenMinDiff = mpxtds * MPXMonthlyHitInFifteenMinDiff
MPXInKB = MPXMonthlyTransactionDataInFifteenMinDiff/1024
MPXInKB
MPXInMb = MPXInKB/1024
MPXInMb
TotalDataTransmisionWithBothVCCandMPX = VCCMonthlyTransactionDataInFiveSecDiff + MPXMonthlyTransactionDataInFifteenMinDiff
TotalDataTransmisionWithBothVCCandMPX
InKB = TotalDataTransmisionWithBothVCCandMPX/1024
InMB = InKB/1024
InMB
InGB = InMB/1024
InGB
# Changing VCC time to see data volume frequency
VCCTime <- c(5, 10, 15, 30, 60)
MPXTime <- c(15, 15, 15, 15, 15)
VCCDataSize <- c(vcctds)
MPXDataSize <- c(mpxtds)
MonthlyCost <- 2
dataFrame = data.frame(VCCTime, MPXTime, VCCDataSize, MPXDataSize, MonthlyCost)
dataFrame
library(dplyr)
calculator  = mutate(dataFrame, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024, MPXMonthlyDataSize = (dataFrame$MPXDataSize * (30*24*(60/dataFrame$MPXTime)))/1024/1024, monthlyTotalVolume = VCCMonthlyDataSize + MPXMonthlyDataSize)
calculator
barplot(
names = calculator$VCCTime,
height = calculator$totalMonthlyHit,
col = "skyblue",
main = "Time Difference vs hit count in max data volume",
xlab = "Time difference",
ylab = "Hit count")
Percentage <- c(5,10,20,30,40,50,60,70,80,90)
dataFrame2 = data.frame(VCCDataSize, Percentage, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage)/100, MPXDataSize, MonthlyCost)
dataFrame2
calculator2  = mutate(dataFrame2, totalMonthlyHit = (30*24*60*(60/5)), VCCMonthlyDataSize = (dataFrame2$DataVolAfterSave *totalMonthlyHit)/1024/1024)
calculator2
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Data save in fixed VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
Percentage <- c(5,10,20,30,40,50,60,70,80,90,95)
dataFrame2 = data.frame(VCCDataSize, Percentage, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage)/100, MPXDataSize, MonthlyCost)
dataFrame2
calculator2  = mutate(dataFrame2, totalMonthlyHit = (30*24*60*(60/5)), VCCMonthlyDataSize = (dataFrame2$DataVolAfterSave *totalMonthlyHit)/1024/1024)
calculator2
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Data save in fixed VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
calculator
calculator  = mutate(dataFrame, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024, MPXMonthlyDataSize = (dataFrame$MPXDataSize * (30*24*(60/dataFrame$MPXTime)))/1024/1024, monthlyTotalVolume = VCCMonthlyDataSize + MPXMonthlyDataSize, gatewayNo=max(monthlyTotalVolume)/monthlyTotalVolume)
calculator
calculator  = mutate(dataFrame, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024, MPXMonthlyDataSize = (dataFrame$MPXDataSize * (30*24*(60/dataFrame$MPXTime)))/1024/1024, monthlyTotalVolume = VCCMonthlyDataSize + MPXMonthlyDataSize, gatewayNoToCover=max(monthlyTotalVolume)/monthlyTotalVolume)
calculator
calculator  = mutate(dataFrame, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024, MPXMonthlyDataSize = (dataFrame$MPXDataSize * (30*24*(60/dataFrame$MPXTime)))/1024/1024, monthlyTotalVolume = VCCMonthlyDataSize + MPXMonthlyDataSize, GatewayCover=max(monthlyTotalVolume)/monthlyTotalVolume)
calculator
calculator2
calculator  = mutate(dataFrame, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024, MPXMonthlyDataSize = (dataFrame$MPXDataSize * (30*24*(60/dataFrame$MPXTime)))/1024/1024, monthlyTotalVolume = VCCMonthlyDataSize + MPXMonthlyDataSize, GatewayCovered=max(monthlyTotalVolume)/monthlyTotalVolume)
calculator
dataFrame2
calculator2
calculator2  = mutate(dataFrame2, totalMonthlyHit = (30*24*60*(60/5)), VCCMonthlyDataSize = (dataFrame2$DataVolAfterSave *totalMonthlyHit)/1024/1024, GatewayCover=max(VCCMonthlyDataSize)/VCCMonthlyDataSize)
calculator2
calculator
calculator2
calculator3  = mutate(calculator, Percentage)
Percentage3 <- c(10,20,30,40,50)
calculator3  = mutate(calculator, Percentage)
Percentage3 <- c(10,20,30,40,50)
calculator3  = mutate(calculator, Percentage3)
calculator3
calculator2
calculator3  = mutate(calculator, Percentage3, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage)/100)
calculator3  = mutate(calculator, Percentage3, DataVol = calculator$VCCDataSize - (calculator$VCCDataSize*Percentage)/100)
Percentage3 <- c(10,20,30,40,50)
calculator3  = mutate(calculator, Percentage3, DataVol = calculator$VCCDataSize - (calculator$VCCDataSize*Percentage)/100)
calculator
calculator$VCCDataSize
calculator3  = mutate(calculator, Percentage3, DataVol = calculator$VCCDataSize - (calculator$VCCDataSize*Percentage)/100)
calculator3  = mutate(calculator, Percentage3, DataVol = calculator$VCCDataSize)
calculator3  = mutate(calculator, Percentage3, DataVol = calculator$VCCDataSize, (calculator$VCCDataSize*Percentage)/100)
calculator3  = mutate(calculator, Percentage3, DataVol = calculator$VCCDataSize - (calculator$VCCDataSize*Percentage3)/100)
calculator3
calculator2
calculator3
calculator
calculator3
calculator3  =  mutate(dataFrame, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024)
calculator3
View(dataFrame)
dataFrame3 = data.frame(VCCTime, MPXTime, VCCDataSize, Percentage3, MPXDataSize)
dataFrame3 = data.frame(VCCTime, MPXTime, VCCDataSize, Percentage3, MPXDataSize)
dataFrame3
calculator2
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage)/100, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024)
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024)
calculator3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024)
calculator3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
dataFrame3 = data.frame(c(5, 10, 15, 30, 60, 120, 180, 240, 300, 420, 600), c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15), VCCDataSize, Percentage, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage)/100, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
VCCTimeGap = c(5, 10, 15, 30, 60, 120, 180, 240, 300, 420, 600)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage)/100, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 60)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
VCCTimeGap = c(5, 10, 20, 25, 30, 35, 40, 45, 50, 55, 60)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
VCCTimeGap = c(5, 10, 15, 20, 30, 35, 40, 45, 50, 55, 60)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60,300)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage, MPXDataSize)
dataFrame3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60,300)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage, MPXDataSize)
Percentage3 <- c(5,10,20,30,40,50,60,70,80,90,95,95)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage3, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Data after saved by percentage in fixed number of VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Data after saved by percentage in fixed no VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Data after saved by percentage in fixed no. VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Saved data by percentage in fixed no. VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Saved data by % in fixed no. VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
calculator3
summary(calculator3)
sum(IDUData$Size)
IDUData$Size
summary(IDUData$Size)
sum(IDUData$Size)
(sum(IDUData$Size)*12.5)/100
IDUDataSize = (4+1)*20*idp + ((sum(IDUData$Size)*12.5)/100)*20
IDUDataSize
sum(ODUData$Size)
IDUDataSize = (4+1)*20*idp + ((sum(IDUData$Size)*12.5)/100)*20
IDUDataSize
ODUDataSize =  (4+5)*odp + ((sum(IDUData$Size)*7.8125)/100)*5
ODUDataSize
IDUDataSize = (4+1)*20*idp + ((sum(IDUData$Size)*12.5)/100)*20
ODUDataSize =  (4+5)*odp + ((sum(IDUData$Size)*7.8125)/100)*5
ODUDataSize
# Total data points including 'Time'
vcctdp = gdp + idp + odp + 1
vcctdp
# Total data size including 'Time' per hit in VCC
vcctds = gatewayDataSize + IDUDataSize + ODUDataSize + 19 + 4
vcctds
# Monthly total hit in VCC
VCCMonthlyHitInFiveSecDiff = 30*24*60*12
VCCMonthlyHitInFiveSecDiff
# Monthly total data size uploaded to the cloud by VCC
VCCMonthlyTransactionDataInFiveSecDiff = vcctds * VCCMonthlyHitInFiveSecDiff
VCCMonthlyTransactionDataInFiveSecDiff
VCCInKB = VCCMonthlyTransactionDataInFiveSecDiff/1024
VCCInKB
VCCInMb = VCCInKB/1024
VCCInMb
VCCInGB = VCCInMb/1024
VCCInGB
#Importing the dataset
MPXData = read_excel('MPXWN.xlsx',1)
#Total data points in MPX
NROW(MPXData)
# Total data size in bytes in MPX
totalMPXSize = sum(MPXData$`Size(byte)`)
totalMPXSize
mIDUDataSize = (4+1)*20*midp + ((sum(MPXData$`Size(byte)`)*12.5)/100)*20
mIDUDataSize
mODUDataSize = (4+5)*modp + ((sum(MPXData$`Size(byte)`)*7.8125)/100)*5
mODUDataSize
# Total data points including 'Time'
mpxtdp = midp + modp + 1
mpxtdp
# Total data size including 'Time' per hit in MPX
mpxtds = mIDUDataSize + mODUDataSize + 19 + 4
mpxtds
#In kilo byte
mpxtds/1024
# Monthly total hit in MPX
MPXMonthlyHitInFifteenMinDiff = 30*24*4
MPXMonthlyHitInFifteenMinDiff
# Monthly total data size uploaded to the cloud by MPX
MPXMonthlyTransactionDataInFifteenMinDiff = mpxtds * MPXMonthlyHitInFifteenMinDiff
MPXInKB = MPXMonthlyTransactionDataInFifteenMinDiff/1024
MPXInKB
MPXInMb = MPXInKB/1024
MPXInMb
TotalDataTransmisionWithBothVCCandMPX = VCCMonthlyTransactionDataInFiveSecDiff + MPXMonthlyTransactionDataInFifteenMinDiff
TotalDataTransmisionWithBothVCCandMPX
InKB = TotalDataTransmisionWithBothVCCandMPX/1024
InMB = InKB/1024
InMB
InGB = InMB/1024
InGB
# Changing VCC time to see data volume frequency
VCCTime <- c(5, 10, 15, 30, 60)
MPXTime <- c(15, 15, 15, 15, 15)
VCCDataSize <- c(vcctds)
MPXDataSize <- c(mpxtds)
MonthlyCost <- 2
dataFrame = data.frame(VCCTime, MPXTime, VCCDataSize, MPXDataSize, MonthlyCost)
dataFrame
View(dataFrame)
library(dplyr)
calculator  = mutate(dataFrame, totalMonthlyHit = (30*24*60*(60/dataFrame$VCCTime)), VCCMonthlyDataSize = (dataFrame$VCCDataSize *totalMonthlyHit)/1024/1024, MPXMonthlyDataSize = (dataFrame$MPXDataSize * (30*24*(60/dataFrame$MPXTime)))/1024/1024, monthlyTotalVolume = VCCMonthlyDataSize + MPXMonthlyDataSize, GatewayCovered=max(monthlyTotalVolume)/monthlyTotalVolume)
calculator
barplot(
names = calculator$VCCTime,
height = calculator$totalMonthlyHit,
col = "skyblue",
main = "Time Difference vs hit count in max data volume",
xlab = "Time difference",
ylab = "Hit count")
Percentage <- c(5,10,20,30,40,50,60,70,80,90,95)
dataFrame2 = data.frame(VCCDataSize, Percentage, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage)/100, MPXDataSize, MonthlyCost)
dataFrame2
calculator2  = mutate(dataFrame2, totalMonthlyHit = (30*24*60*(60/5)), VCCMonthlyDataSize = (dataFrame2$DataVolAfterSave *totalMonthlyHit)/1024/1024, GatewayCovered=max(VCCMonthlyDataSize)/VCCMonthlyDataSize)
calculator2
barplot(
names = calculator2$Percentage,
height = calculator2$VCCMonthlyDataSize,
col = "skyblue",
main = "Saved data by % in fixed no. VCC hit",
xlab = "Volume save in percentage",
ylab = "Data Volume in MB")
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60, 300)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
Percentage3 <- c(5,10,20,30,40,50,60,70,80,90,95,95)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage3, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
summary(calculator3)
calculator
calculator2
calculator3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60, 300, 600)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
Percentage3 <- c(5,10,20,30,40,50,60,70,80,90,95,95, 95)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage3, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
Percentage3 <- c(5,10,20,30,40,50,60,70,75,80,90,95,95)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage3, MPXDataSize)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
Percentage3 <- c(5,10,20,30,40,50,60,70,75,80,90,95,95)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage3, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60, 300, 360)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
Percentage3 <- c(5,10,20,30,40,50,60,70,75,80,90,95,95)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage3, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60, 300, 600)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15)
Percentage3 <- c(5,10,20,30,40,50,60,70,75,80,90,95,95)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, Percentage3, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
calculator3  =  mutate(dataFrame3, DVAS = VCCDataSize - (VCCDataSize*Percentage3)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DVAS *totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60, 300, 420, 600)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, MPXDataSize)
dataFrame3
VCCTimeGap = c(5, 10, 15, 20, 25, 30, 40, 45, 50, 55, 60, 300, 420, 600)
MPXTimeGap = c(15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,15)
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (VCCDataSize*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(MonthlyDataSize)/MonthlyDataSize)
calculator3
calculator3  =  mutate(dataFrame3, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (VCCDataSize*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator3
dataFrame3 = data.frame(VCCTimeGap, MPXTimeGap, VCCDataSize, MPXDataSize)
dataFrame3
calculator3  =  mutate(dataFrame3, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (VCCDataSize*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator3
Percentage4 <- c(5,10,15,20,25,30,35,40,45,50,55,60,65,70)
calculator4  =  mutate(dataFrame3, Percentage4)
calculator4
calculator4  =  mutate(dataFrame3, Percentage4, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage4)/100)
calculator4
calculator4  =  mutate(dataFrame3, Percentage4, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage4)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DataVolAfterSave*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator4
calculator3
calculator4
Percentage4 <- c(5,10,15,20,25,30,35,40,50,60,70,80,90,95)
calculator4  =  mutate(dataFrame3, Percentage4, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage4)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DataVolAfterSave*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator4
Percentage4 <- c(5,10,15,20,25,30,35,40,45,50,60,70,80,90)
calculator4  =  mutate(dataFrame3, Percentage4, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage4)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DataVolAfterSave*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator4
Percentage4 <- c(5,10,15,20,25,30,35,40,45,50,60,70,80,85)
calculator4  =  mutate(dataFrame3, Percentage4, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage4)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DataVolAfterSave*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator4
Percentage4 <- c(5,10,15,20,25,30,35,40,45,50,60,70,80,90)
calculator4  =  mutate(dataFrame3, Percentage4, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage4)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DataVolAfterSave*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator4
Percentage4 <- c(5,10,15,20,25,30,35,40,45,50,60,70,80,92)
calculator4  =  mutate(dataFrame3, Percentage4, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage4)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DataVolAfterSave*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator4
Percentage4 <- c(5,10,15,20,25,30,35,40,45,50,60,70,80,93)
calculator4  =  mutate(dataFrame3, Percentage4, DataVolAfterSave = VCCDataSize - (VCCDataSize*Percentage4)/100, totalMonthlyHit = (30*24*60*(60/VCCTimeGap)), MonthlyDataSize = (DataVolAfterSave*totalMonthlyHit)/1024/1024, YearlyDataSize=MonthlyDataSize*12, GatewayCovered=max(YearlyDataSize)/YearlyDataSize)
calculator4
